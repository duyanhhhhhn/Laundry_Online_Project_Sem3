@model List<Laundry_Online_Web_FE.Models.ModelViews.InvoiceView>
@{
    ViewBag.Title = "Lịch đặt của tôi";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-calendar-check"></i> Lịch đặt của tôi</h2>
                <a href="@Url.Action("BookService", "Home")" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Đặt lịch mới
                </a>
            </div>

            <!-- Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Bookings List -->
            @if (Model != null && Model.Any())
            {
                <!-- Thống kê nhanh -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card text-center border-warning">
                            <div class="card-body py-2">
                                <h5 class="text-warning mb-0">@Model.Count(b => b.Order_Status == 0)</h5>
                                <small>Chờ xác nhận</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center border-info">
                            <div class="card-body py-2">
                                <h5 class="text-info mb-0">@Model.Count(b => b.Order_Status == 1)</h5>
                                <small>Đã xác nhận</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center border-success">
                            <div class="card-body py-2">
                                <h5 class="text-success mb-0">@Model.Count(b => b.Order_Status == 3)</h5>
                                <small>Hoàn thành</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-center border-danger">
                            <div class="card-body py-2">
                                <h5 class="text-danger mb-0">@Model.Count(b => b.Order_Status == 99)</h5>
                                <small>Đã hủy</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Filter Tabs -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="btn-group w-100" role="group">
                            <button type="button" class="btn btn-outline-primary active" onclick="filterBookings('all')">
                                Tất cả (@Model.Count())
                            </button>
                            <button type="button" class="btn btn-outline-warning" onclick="filterBookings('pending')">
                                Chờ xác nhận (@Model.Count(b => b.Order_Status == 0))
                            </button>
                            <button type="button" class="btn btn-outline-info" onclick="filterBookings('confirmed')">
                                Đã xác nhận (@Model.Count(b => b.Order_Status == 1))
                            </button>
                            <button type="button" class="btn btn-outline-success" onclick="filterBookings('completed')">
                                Hoàn thành (@Model.Count(b => b.Order_Status == 3))
                            </button>
                            <button type="button" class="btn btn-outline-danger" onclick="filterBookings('cancelled')">
                                Đã hủy (@Model.Count(b => b.Order_Status == 99))
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Bookings Cards -->
                <div class="row">
                    @foreach (var booking in Model)
                    {
                        <div class="col-md-6 col-lg-4 mb-4 booking-item" data-status="@booking.Order_Status">
                            <div class="card booking-card h-100 @(booking.Order_Status == 0 ? "border-warning" : "")">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <span class="badge bg-@GetStatusClass(booking.Order_Status)">
                                        @GetStatusText(booking.Order_Status)
                                    </span>
                                    <small class="text-muted">#@booking.Id</small>
                                </div>
                                <div class="card-body">
                                    <div class="booking-info mb-3">
                                        <div class="info-row">
                                            <i class="fas fa-calendar text-primary"></i>
                                            <span>@((booking.Delivery_Date ?? DateTime.MinValue).ToString("dd/MM/yyyy"))</span>
                                        </div>
                                        <div class="info-row">
                                            <i class="fas fa-clock text-primary"></i>
                                            <span>@((booking.Delivery_Date ?? DateTime.MinValue).ToString("HH:mm"))</span>
                                        </div>
                                        <div class="info-row">
                                            <i class="fas fa-dollar-sign text-success"></i>
                                            <span>@booking.Total_Amount.ToString("N0") VNĐ</span>
                                        </div>
                                    </div>

                                    @if (!string.IsNullOrEmpty(booking.Notes))
                                    {
                                        <div class="notes mb-3">
                                            <small class="text-muted">
                                                <i class="fas fa-sticky-note"></i>
                                                @Html.Raw(booking.Notes.Replace("\n", "<br />"))
                                            </small>
                                        </div>
                                    }

                                    <div class="booking-date">
                                        <small class="text-muted">
                                            Đặt lúc: @booking.Invoice_Date.ToString("dd/MM/yyyy HH:mm")
                                        </small>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="btn-group w-100" role="group">
                                        <button type="button" class="btn btn-outline-info btn-sm"
                                                onclick="viewDetails(@booking.Id)">
                                            <i class="fas fa-eye"></i> Chi tiết
                                        </button>

                                        @* Chỉ hiển thị nút Edit/Cancel cho booking có order_status = 0 *@
                                        @if (booking.Order_Status == 0)
                                        {
                                            if (CanEditBooking(booking))
                                            {
                                                <a href="@Url.Action("Edit", new { id = booking.Id })"
                                                   class="btn btn-outline-warning btn-sm">
                                                    <i class="fas fa-edit"></i> Sửa
                                                </a>
                                            }

                                            if (CanCancelBooking(booking))
                                            {
                                                <button type="button" class="btn btn-outline-danger btn-sm"
                                                        onclick="cancelBooking(@booking.Id)">
                                                    <i class="fas fa-times"></i> Hủy
                                                </button>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-calendar-times fa-5x text-muted mb-3"></i>
                    <h4 class="text-muted">Chưa có lịch đặt nào</h4>
                    <p class="text-muted mb-4">Bạn chưa đặt lịch dịch vụ nào. Hãy đặt lịch ngay!</p>
                    <a href="@Url.Action("BookService", "Home")" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus"></i> Đặt lịch ngay
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Cancel Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Hủy lịch đặt</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn hủy lịch đặt này?</p>
                <div class="mb-3">
                    <label for="cancelReason" class="form-label">Lý do hủy (tùy chọn)</label>
                    <textarea id="cancelReason" class="form-control" rows="3"
                              placeholder="Nhập lý do hủy lịch..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-danger" onclick="confirmCancel()">Xác nhận hủy</button>
            </div>
        </div>
    </div>
</div>

<!-- Inline Styles -->
<style>
    .booking-card {
        transition: transform 0.2s;
        border: 1px solid #e0e0e0;
    }

        .booking-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .border-warning {
        border-color: #ffc107 !important;
        border-width: 2px !important;
    }

    .info-row {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
    }

        .info-row i {
            width: 20px;
            margin-right: 8px;
        }

    .notes {
        background: #f8f9fa;
        padding: 8px;
        border-radius: 4px;
        border-left: 3px solid #007bff;
        max-height: 100px;
        overflow-y: auto;
    }

    .btn-group .btn {
        font-size: 0.875rem;
    }

    .badge {
        font-size: 0.75rem;
    }

    .btn-group .btn:first-child {
        border-top-left-radius: 0.375rem;
        border-bottom-left-radius: 0.375rem;
    }

    .btn-group .btn:last-child {
        border-top-right-radius: 0.375rem;
        border-bottom-right-radius: 0.375rem;
    }
</style>

<!-- Inline Scripts -->
<script>
    let bookingToCancel = 0;

    function filterBookings(status) {
        const bookingItems = document.querySelectorAll('.booking-item');
        const buttons = document.querySelectorAll('.btn-group .btn');

        // Reset active state
        buttons.forEach(btn => btn.classList.remove('active'));

        bookingItems.forEach(item => {
            const itemStatus = item.getAttribute('data-status');
            let show = false;

            switch(status) {
                case 'all':
                    show = true;
                    buttons[0].classList.add('active');
                    break;
                case 'pending':
                    show = itemStatus === '0';
                    buttons[1].classList.add('active');
                    break;
                case 'confirmed':
                    show = itemStatus === '1';
                    buttons[2].classList.add('active');
                    break;
                case 'completed':
                    show = itemStatus === '3';
                    buttons[3].classList.add('active');
                    break;
                case 'cancelled':
                    show = itemStatus === '99';
                    buttons[4].classList.add('active');
                    break;
            }

            item.style.display = show ? 'block' : 'none';
        });
    }

    function viewDetails(bookingId) {
        // TODO: Implement view details modal or redirect
        alert('Chi tiết booking #' + bookingId);
    }

    function cancelBooking(bookingId) {
        bookingToCancel = bookingId;
        $('#cancelModal').modal('show');
    }

    function confirmCancel() {
        const reason = document.getElementById('cancelReason').value;

        fetch('@Url.Action("Cancel", "Booking")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            body: `id=${bookingToCancel}&cancelReason=${encodeURIComponent(reason)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                $('#cancelModal').modal('hide');
                location.reload(); // Reload page to show updated status
            } else {
                alert('Lỗi: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Đã xảy ra lỗi khi hủy lịch đặt.');
        });
    }

    // Auto hide alerts after 5 seconds
    setTimeout(function() {
        $('.alert').fadeOut('slow');
    }, 5000);
</script>

@functions {
    private bool CanEditBooking(Laundry_Online_Web_FE.Models.ModelViews.InvoiceView booking)
    {
        if (booking.Order_Status != 0) return false; // Chỉ cho phép edit status = 0

        var deliveryTime = booking.Delivery_Date ?? DateTime.MaxValue;
        return deliveryTime > DateTime.Now.AddHours(24);
    }

    private bool CanCancelBooking(Laundry_Online_Web_FE.Models.ModelViews.InvoiceView booking)
    {
        if (booking.Order_Status != 0) return false; // Chỉ cho phép cancel status = 0

        var deliveryTime = booking.Delivery_Date ?? DateTime.MaxValue;
        return deliveryTime > DateTime.Now.AddHours(2);
    }

    private string GetStatusText(int status)
    {
        switch (status)
        {
            case 0: return "Chờ xác nhận";
            case 1: return "Đã xác nhận";
            case 2: return "Đang thực hiện";
            case 3: return "Hoàn thành";
            case 99: return "Đã hủy";
            default: return "Không xác định";
        }
    }

    private string GetStatusClass(int status)
    {
        switch (status)
        {
            case 0: return "warning";
            case 1: return "info";
            case 2: return "primary";
            case 3: return "success";
            case 99: return "danger";
            default: return "secondary";
        }
    }
}

@Html.AntiForgeryToken()