@using Laundry_Online_Web_FE.Models.ModelViews.DTO
@model InvoiceForm
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Edit Invoice #@Model.Id</h3>
                    <div class="card-tools">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary btn-sm" })
                    </div>
                </div>

                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    <form id="invoiceForm" action="@Url.Action("EditInvoice", "Invoice")" method="post">
                        <input type="hidden" name="Id" value="@Model.Invoice_Id" />

                        <div class="row">
                            <!-- Customer Information -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Customer_Id">Customer *</label>
                                    @Html.DropDownListFor(m => m.Customer_Id,
                                                  new SelectList(ViewBag.CustomerList, "Id", "FirstName", Model.Customer_Id),
                                                  "-- Select Customer --",
                                                  new { @class = "form-control", @id = "Customer_Id", @required = "required" })
                                    @Html.ValidationMessageFor(m => m.Customer_Id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Employee Information -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Employee_Id">Employee</label>
                                    @Html.DropDownListFor(m => m.Employee_Id,
                                                  new SelectList(ViewBag.EmployeeList, "Id", "FirstName", Model.Employee_Id),
                                                  "-- Select Employee --",
                                                  new { @class = "form-control", @id = "Employee_Id" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Delivery Date -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Delivery_Date">Delivery Date *</label>
                                    @Html.TextBoxFor(m => m.Delivery_Date, new { @class = "form-control", @type = "date", @required = "required" })
                                    @Html.ValidationMessageFor(m => m.Delivery_Date, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Pickup Date -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Pickup_Date">Pickup Date *</label>
                                    @Html.TextBoxFor(m => m.Pickup_Date, new { @class = "form-control", @type = "date", @required = "required" })
                                    @Html.ValidationMessageFor(m => m.Pickup_Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Payment Type -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Payment_Type">Payment Type</label>
                                    @Html.DropDownListFor(m => m.Payment_Type,
                                                  InvoiceForm.GetPaymentTypes(),
                                                  new { @class = "form-control", @id = "Payment_Type" })
                                </div>
                            </div>

                            <!-- Invoice Type -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Invoice_Type">Invoice Type</label>
                                    @Html.DropDownListFor(m => m.Invoice_Type,
                                                  InvoiceForm.GetInvoiceTypes(),
                                                  new { @class = "form-control", @id = "Invoice_Type" })
                                </div>
                            </div>

                            <!-- Customer Package -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="CustomerPackage_Id">Customer Package</label>
                                    <select name="CustomerPackage_Id" id="CustomerPackage_Id" class="form-control">
                                        <option value="">-- Select Package --</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Order Status -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Order_Status">Order Status</label>
                                    @Html.DropDownListFor(m => m.Order_Status,
                                                  InvoiceForm.GetOrderStatuses(),
                                                  new { @class = "form-control", @id = "Order_Status" })
                                </div>
                            </div>

                            <!-- Delivery Status -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Delivery_Status">Delivery Status</label>
                                    @Html.DropDownListFor(m => m.Delivery_Status,
                                                  InvoiceForm.GetDeliveryStatuses(),
                                                  new { @class = "form-control", @id = "Delivery_Status" })
                                </div>
                            </div>

                            <!-- Status -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Status">Status</label>
                                    @Html.DropDownListFor(m => m.Status,
                                                  InvoiceForm.GetStatusOptions(),
                                                  new { @class = "form-control", @id = "Status" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Shipping Cost -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Ship_Cost">Shipping Cost</label>
                                    @Html.TextBoxFor(m => m.Ship_Cost, new { @class = "form-control", @type = "number", @step = "0.01", @min = "0" })
                                    @Html.ValidationMessageFor(m => m.Ship_Cost, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Notes -->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="Notes">Notes</label>
                                    @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", @rows = "3", @maxlength = "500" })
                                    @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <!-- Invoice Items Section -->
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card">
                                    <div class="card-header">
                                        <h5>Invoice Items</h5>
                                        <button type="button" class="btn btn-primary btn-sm float-right" onclick="addInvoiceItem()">
                                            <i class="fas fa-plus"></i> Add Item
                                        </button>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-bordered" id="invoiceItemsTable">
                                                <thead>
                                                    <tr>
                                                        <th>Service</th>
                                                        <th>Quantity</th>
                                                        <th>Unit Price</th>
                                                        <th>Sub Total</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="invoiceItemsBody">
                                                    <!-- Invoice items will be loaded here -->
                                                </tbody>
                                            </table>
                                        </div>

                                        <div class="row mt-3">
                                            <div class="col-md-8"></div>
                                            <div class="col-md-4">
                                                <div class="table-responsive">
                                                    <table class="table">
                                                        <tr>
                                                            <td><strong>Subtotal:</strong></td>
                                                            <td class="text-right" id="subtotal">0.00</td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Shipping:</strong></td>
                                                            <td class="text-right" id="shipping">0.00</td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Total:</strong></td>
                                                            <td class="text-right" id="total">0.00</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save"></i> Update Invoice
                                    </button>

                                    @if (User.Identity.IsAuthenticated && string.IsNullOrEmpty(Model.Payment_Id) && Model.Order_Status != 2)
                                    {
                                        <button type="button" class="btn btn-success ml-2" onclick="processPayment()">
                                            <i class="fas fa-credit-card"></i> Process Payment
                                        </button>
                                    }

                                    @if (!string.IsNullOrEmpty(Model.Payment_Id))
                                    {
                                        <span class="badge badge-success ml-2">Paid - Payment ID: @Model.Payment_Id</span>
                                    }

                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary ml-2" })
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Invoice Item Modal -->
<div class="modal fade" id="addItemModal" tabindex="-1" role="dialog" aria-labelledby="addItemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addItemModalLabel">Add Invoice Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addItemForm">
                    <div class="form-group">
                        <label for="ItemName">Item Name *</label>
                        <input type="text" id="ItemName" required>
                    </div>
                    <div class="form-group">
                        <label for="itemQuantity">Quantity *</label>
                        <input type="number" id="itemQuantity" class="form-control" min="1" value="1" required>
                    </div>
                    <div class="form-group">
                        <label for="itemPrice">Unit Price *</label>
                        <input type="number" id="itemPrice" class="form-control" step="0.01" min="0" required>
                    </div>
                    <div class="form-group">
                        <label for="itemNotes">Notes</label>
                        <textarea id="itemNotes" class="form-control" rows="2" maxlength="200"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="serviceSelect">Service *</label>
                        <select id="serviceSelect" class="form-control" required>
                            <option value="">-- Select Service --</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveInvoiceItem()">Add Item</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let invoiceItems = [];
        let itemIdCounter = 0;

        $(document).ready(function() {
            loadCustomerPackages();
            loadServices();
            loadInvoiceItems();
            calculateTotal();

            // Update shipping cost when changed
            $('#Ship_Cost').on('input', function() {
                calculateTotal();
            });

            // Load customer packages when customer changes
            $('#Customer_Id').change(function() {
                loadCustomerPackages();
            });
        });

        function loadCustomerPackages() {
            const customerId = $('#Customer_Id').val();
            if (customerId) {
                $.ajax({
                    url: '@Url.Action("GetCustomerPackages", "Invoice")',
                    type: 'GET',
                    data: { customerId: customerId },
                    success: function(data) {
                        $('#CustomerPackage_Id').empty().append('<option value="">-- Select Package --</option>');
                        $.each(data, function(index, item) {
                            $('#CustomerPackage_Id').append('<option value="' + item.Id + '">' + item.Name + '</option>');
                        });
                    }
                });
            } else {
                $('#CustomerPackage_Id').empty().append('<option value="">-- Select Package --</option>');
            }
        }

        function loadServices() {
            // This would load services from your service endpoint
            // For now, adding sample services
            const services = [
                { Id: 1, Name: 'Washing', Price: 15.00 },
                { Id: 2, Name: 'Dry Cleaning', Price: 25.00 },
                { Id: 3, Name: 'Ironing', Price: 10.00 },
                { Id: 4, Name: 'Folding', Price: 5.00 }
            ];

            $('#serviceSelect').empty().append('<option value="">-- Select Service --</option>');
            $.each(services, function(index, service) {
                $('#serviceSelect').append('<option value="' + service.Id + '" data-price="' + service.Price + '">' + service.Name + '</option>');
            });
        }

        function loadInvoiceItems() {
            // This would load existing invoice items from the server
            // For now, we'll start with empty items
            renderInvoiceItems();
        }

        function addInvoiceItem() {
            $('#addItemModal').modal('show');
        }

        function saveInvoiceItem() {
            const serviceId = $('#serviceSelect').val();
            const serviceName = $('#serviceSelect option:selected').text();
            const quantity = parseInt($('#itemQuantity').val());
            const unitPrice = parseFloat($('#itemPrice').val());
            const notes = $('#itemNotes').val();

            if (!serviceId || !quantity || !unitPrice) {
                alert('Please fill in all required fields');
                return;
            }

            const item = {
                id: ++itemIdCounter,
                serviceId: serviceId,
                serviceName: serviceName,
                quantity: quantity,
                unitPrice: unitPrice,
                subTotal: quantity * unitPrice,
                notes: notes
            };

            invoiceItems.push(item);
            renderInvoiceItems();
            calculateTotal();

            $('#addItemModal').modal('hide');
            $('#addItemForm')[0].reset();
        }

        function removeInvoiceItem(id) {
            invoiceItems = invoiceItems.filter(item => item.id !== id);
            renderInvoiceItems();
            calculateTotal();
        }

        function renderInvoiceItems() {
            const tbody = $('#invoiceItemsBody');
            tbody.empty();

            if (invoiceItems.length === 0) {
                tbody.append('<tr><td colspan="5" class="text-center">No items added yet</td></tr>');
                return;
            }

            $.each(invoiceItems, function(index, item) {
                tbody.append(`
                    <tr>
                        <td>${item.serviceName}</td>
                        <td>${item.quantity}</td>
                        <td>$${item.unitPrice.toFixed(2)}</td>
                        <td>$${item.subTotal.toFixed(2)}</td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeInvoiceItem(${item.id})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `);
            });
        }

        function calculateTotal() {
            const subtotal = invoiceItems.reduce((sum, item) => sum + item.subTotal, 0);
            const shipping = parseFloat($('#Ship_Cost').val()) || 0;
            const total = subtotal + shipping;

            $('#subtotal').text('$' + subtotal.toFixed(2));
            $('#shipping').text('$' + shipping.toFixed(2));
            $('#total').text('$' + total.toFixed(2));
        }

        function processPayment() {
            if (confirm('Are you sure you want to process payment for this invoice?')) {
                // First save the invoice
                const form = $('#invoiceForm');
                const formData = new FormData(form[0]);

                // Add invoice items to form data
                formData.append('InvoiceItems', JSON.stringify(invoiceItems));

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        // After successful save, redirect to payment
                        window.location.href = '@Url.Action("ProcessPayment", "Invoice")' + '?invoiceId=' + @Model.Invoice_Id;
                    },
                    error: function() {
                        alert('Error saving invoice. Please try again.');
                    }
                });
            }
        }

        // Auto-fill price when service is selected
        $('#serviceSelect').change(function() {
            const price = $(this).find('option:selected').data('price');
            if (price) {
                $('#itemPrice').val(price);
            }
        });

        // Form submission handler
        $('#invoiceForm').on('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            formData.append('InvoiceItems', JSON.stringify(invoiceItems));

            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        alert('Invoice updated successfully!');
                        window.location.href = '@Url.Action("Index", "Invoice")';
                    } else {
                        alert('Error updating invoice: ' + response.message);
                    }
                },
                error: function() {
                    alert('Error updating invoice. Please try again.');
                }
            });
        });
    </script>
}


<style>
    .card {
        margin-bottom: 20px;
    }

    .table th {
        background-color: #f8f9fa;
    }

    .badge {
        font-size: 0.9em;
    }

    .modal-body .form-group {
        margin-bottom: 1rem;
    }

    #invoiceItemsTable {
        margin-bottom: 0;
    }

    .table td, .table th {
        vertical-align: middle;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
    }

    .alert {
        margin-bottom: 1rem;
    }
</style>
