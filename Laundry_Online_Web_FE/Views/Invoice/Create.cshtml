@model Laundry_Online_Web_FE.Models.ModelViews.DTO.InvoiceForm

@{
    ViewBag.Title = "Create Invoice";
    var paymentTypes = ViewBag.PaymentTypeList as List<SelectListItem>;
    var invoiceTypes = ViewBag.InvoiceTypeList as List<SelectListItem>;
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Create Invoice</h2>

@using (Html.BeginForm("Create", "Invoice", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

<div class="form-group">
    @Html.LabelFor(model => model.Customer_Id, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-6 position-relative">
        @Html.TextBox("CustomerSearch", null, new { @class = "form-control", @placeholder = "Nhập tên hoặc SĐT khách hàng...", autocomplete = "off" })
        @Html.HiddenFor(model => model.Customer_Id)
        <div id="customer-suggestions" class="list-group"></div>
        @Html.ValidationMessageFor(model => model.Customer_Id, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Employee_Id, "Employee", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Employee_Name, new { @class = "form-control", @readonly = "readonly" })
            @Html.HiddenFor(model => model.Employee_Id)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Delivery_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Delivery_Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pickup_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Pickup_Date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd") })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Invoice_Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.Invoice_Type, invoiceTypes, "-- Select Invoice Type --", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Payment_Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.Payment_Type, paymentTypes, "-- Select Payment Type --", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ship_Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Ship_Cost, new { @class = "form-control", @type = "number", step = "0.01", min = "0" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", rows = 3 })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-6">
            <input type="submit" value="Create Invoice" class="btn btn-primary" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#CustomerSearch").on("input", function () {
                var query = $(this).val();
                if (query.length < 2) {
                    $("#customer-suggestions").empty();
                    return;
                }

                $.getJSON('/Admin/Invoice/SearchCustomer', { term: query }, function (data) {
                    var suggestions = $("#customer-suggestions").empty();
                    $.each(data, function (i, customer) {
                        suggestions.append(
                            $('<a href="#" class="list-group-item list-group-item-action">')
                                .text(customer.Name)
                                .data("id", customer.Id)
                        );
                    });
                });
            });

            $(document).on("click", "#customer-suggestions a", function (e) {
                e.preventDefault();
                var selectedId = $(this).data("id");
                var displayText = $(this).text();

                $("#CustomerSearch").val(displayText);
                $("#Customer_Id").val(selectedId);
                $("#customer-suggestions").empty();
            });
        });
    </script>
}
<style>
    #customer-suggestions {
        position: absolute;
        z-index: 1000;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
    }

        #customer-suggestions a {
            cursor: pointer;
        }
</style>