@model Laundry_Online_Web_FE.Models.ModelViews.InvoiceView
@{
    ViewBag.Title = "Order Details";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4><i class="fas fa-file-invoice"></i> Order Details #@Model.Id</h4>
                        @{
                            // CẬP NHẬT: Định nghĩa trạng thái mới
                            string statusText = "";
                            string statusClass = "";
                            string statusIcon = "";
                            switch (Model.Order_Status)
                            {
                                case 0:
                                    statusText = "Pending";
                                    statusClass = "warning";
                                    statusIcon = "fa-hourglass-half";
                                    break;
                                case 1:
                                    statusText = "Confirmed";
                                    statusClass = "info";
                                    statusIcon = "fa-check-circle";
                                    break;
                                case 2:
                                    statusText = "Paid";
                                    statusClass = "success";
                                    statusIcon = "fa-money-bill-wave";
                                    break;
                                case 3:
                                    statusText = "Cancelled";
                                    statusClass = "danger";
                                    statusIcon = "fa-times-circle";
                                    break;
                                default:
                                    statusText = "Unknown";
                                    statusClass = "secondary";
                                    statusIcon = "fa-question-circle";
                                    break;
                            }
                        }
                        <span class="badge badge-@statusClass badge-lg">
                            <i class="fas @statusIcon"></i> @statusText
                        </span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5><i class="fas fa-info-circle"></i> Basic Information</h5>
                            <div class="info-section">
                                <p><strong><i class="fas fa-user"></i> Customer:</strong> @(Model.CustomerName ?? $"ID: {Model.Customer_Id}")</p>
                                <p><strong><i class="fas fa-phone"></i> Phone Number:</strong> @(Model.CustomerPhone ?? "N/A")</p>
                                <p><strong><i class="fas fa-calendar-alt"></i> Appointment:</strong> @Model.Invoice_Date.ToString("dd/MM/yyyy HH:mm")</p>
                                <p>
                                    <strong><i class="fas fa-flag"></i> Order Status:</strong>
                                    <span class="badge badge-@statusClass" id="order-status-badge">
                                        <i class="fas @statusIcon"></i> @statusText
                                    </span>
                                </p>
                                <p>
                                    <strong><i class="fas fa-toggle-on"></i> Active Status:</strong>
                                    @if (Model.Status == 1)
                                    {
                                        <span class="badge badge-success">
                                            <i class="fas fa-check"></i> Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">
                                            <i class="fas fa-times"></i> Inactive
                                        </span>
                                    }
                                </p>
                                <p><strong><i class="fas fa-tag"></i> Invoice Type:</strong> @Model.Invoice_Type</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5><i class="fas fa-dollar-sign"></i> Financial Information</h5>
                            <div class="info-section">
                                <p>
                                    <strong><i class="fas fa-calculator"></i> Total Amount:</strong>
                                    <span class="text-success font-weight-bold">@Model.Total_Amount.ToString("N0") VND</span>
                                </p>
                                <p>
                                    <strong><i class="fas fa-shipping-fast"></i> Shipping Cost:</strong>
                                    <span class="text-info">@Model.Ship_Cost.ToString("N0") VND</span>
                                </p>
                                <p><strong><i class="fas fa-credit-card"></i> Payment Type:</strong> @Model.Payment_Type</p>
                                <p>
                                    <strong><i class="fas fa-receipt"></i> Payment ID:</strong>
                                    @if (!string.IsNullOrEmpty(Model.Payment_Id))
                                    {
                                        <span class="badge badge-success">@Model.Payment_Id</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not paid</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <h5><i class="fas fa-truck"></i> Delivery Information</h5>
                            <div class="info-section">
                                <p><strong><i class="fas fa-info-circle"></i> Delivery Status:</strong> @Model.Delivery_Status</p>
                                <p>
                                    <strong><i class="fas fa-calendar-check"></i> Delivery Date:</strong>
                                    @(Model.Delivery_Date?.ToString("dd/MM/yyyy") ?? "<span class='text-muted'>Not set</span>")
                                </p>
                                <p>
                                    <strong><i class="fas fa-calendar-times"></i> Pickup Date:</strong>
                                    @(Model.Pickup_Date?.ToString("dd/MM/yyyy") ?? "<span class='text-muted'>Not set</span>")
                                </p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5><i class="fas fa-chart-line"></i> Order Timeline</h5>
                            <div class="info-section">
                                <p><strong><i class="fas fa-clock"></i> Created:</strong> @Model.Invoice_Date.ToString("dd/MM/yyyy HH:mm")</p>
                                <p>
                                    <strong><i class="fas fa-history"></i> Last Updated:</strong>
                                    <span class="text-muted">Check notes for update history</span>
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-12">
                            <h5><i class="fas fa-sticky-note"></i> Notes & History</h5>
                            <div class="notes-container border p-3" style="background-color: #f8f9fa; border-radius: 6px;">
                                @if (!string.IsNullOrEmpty(Model.Notes))
                                {
                                    @Html.Raw(Model.Notes.Replace("\n", "<br />"))
                                }
                                else
                                {
                                    <em class="text-muted">No notes available</em>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-light">
                    <div class="d-flex justify-content-between align-items-center">
                        <a href="@Url.Action("BookingManagement")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>

                        <div class="action-buttons">
                            @if (Model.Order_Status == 0) // Pending
                            {
                                <button class="btn btn-info mr-2" onclick="updateStatus(@Model.Id, 1)" title="Confirm Order">
                                    <i class="fas fa-check-circle"></i> Confirm
                                </button>
                                <button class="btn btn-danger" onclick="updateStatus(@Model.Id, 3)" title="Cancel Order">
                                    <i class="fas fa-times-circle"></i> Cancel
                                </button>
                            }
                            else if (Model.Order_Status == 1) // Confirmed
                            {
                                <button class="btn btn-success mr-2" onclick="updateStatus(@Model.Id, 2)" title="Mark as Paid">
                                    <i class="fas fa-dollar-sign"></i> Mark as Paid
                                </button>
                                <button class="btn btn-warning mr-2" onclick="updateStatus(@Model.Id, 0)" title="Set to Pending">
                                    <i class="fas fa-undo"></i> Set Pending
                                </button>
                                <button class="btn btn-danger" onclick="updateStatus(@Model.Id, 3)" title="Cancel Order">
                                    <i class="fas fa-times-circle"></i> Cancel
                                </button>
                            }
                            else if (Model.Order_Status == 2) // Paid
                            {
                                <button class="btn btn-info" onclick="updateStatus(@Model.Id, 1)" title="Set to Confirmed">
                                    <i class="fas fa-check-circle"></i> Set Confirmed
                                </button>
                            }
                            else if (Model.Order_Status == 3) // Cancelled
                            {
                                <button class="btn btn-info" onclick="updateStatus(@Model.Id, 1)" title="Reactivate Order">
                                    <i class="fas fa-redo"></i> Reactivate
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Stats Card -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5><i class="fas fa-chart-bar"></i> Quick Stats</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-12 mb-3">
                            <h6>Order Value</h6>
                            <h4 class="text-success">@Model.Total_Amount.ToString("N0") VND</h4>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Shipping</small>
                            <p class="font-weight-bold">@Model.Ship_Cost.ToString("N0") VND</p>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Type</small>
                            <p class="font-weight-bold">@(Model.Invoice_Type == 1 ? "Online" : "Offline")</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Status History Card -->
            <div class="card mt-3">
                <div class="card-header bg-secondary text-white">
                    <h6><i class="fas fa-history"></i> Status Information</h6>
                </div>
                <div class="card-body">
                    <div class="status-timeline">
                        <div class="d-flex align-items-center mb-2">
                            <i class="fas fa-circle text-primary mr-2"></i>
                            <small>Current: <strong>@statusText</strong></small>
                        </div>
                        <div class="d-flex align-items-center mb-2">
                            <i class="fas fa-toggle-on text-@(Model.Status == 1 ? "success" : "danger") mr-2"></i>
                            <small>Status: <strong>@(Model.Status == 1 ? "Active" : "Inactive")</strong></small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function updateStatus(bookingId, newStatus) {
        const statusNames = {
            0: 'Pending',
            1: 'Confirmed',
            2: 'Paid',
            3: 'Cancelled'
        };

        const statusName = statusNames[newStatus] || 'Unknown';

        if (confirm(`Are you sure you want to update the status to "${statusName}"?`)) {
            // Show loading state
            const badge = document.getElementById('order-status-badge');
            const originalContent = badge.innerHTML;
            badge.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';

            $.ajax({
                url: '@Url.Action("UpdateBookingStatus")',
                type: 'POST',
                data: { id: bookingId, newStatus: newStatus },
                success: function(response) {
                    if (response.success) {
                        // Update the badge
                        badge.className = `badge badge-${response.newStatusClass}`;
                        badge.innerHTML = getStatusIcon(newStatus) + ' ' + response.newStatusText;

                        // Show success message
                        showAlert('success', response.message);

                        // Reload after 2 seconds to update action buttons
                        setTimeout(() => location.reload(), 2000);
                    } else {
                        // Restore original content
                        badge.innerHTML = originalContent;
                        showAlert('error', response.message);
                    }
                },
                error: function() {
                    // Restore original content
                    badge.innerHTML = originalContent;
                    showAlert('error', 'An error occurred while updating status');
                }
            });
        }
    }

    function getStatusIcon(status) {
        const icons = {
            0: '<i class="fas fa-hourglass-half"></i>',
            1: '<i class="fas fa-check-circle"></i>',
            2: '<i class="fas fa-money-bill-wave"></i>',
            3: '<i class="fas fa-times-circle"></i>'
        };
        return icons[status] || '<i class="fas fa-question-circle"></i>';
    }

    function showAlert(type, message) {
        const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';

        const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                <i class="fas ${iconClass}"></i> ${message}
                <button type="button" class="close" data-dismiss="alert">
                    <span>&times;</span>
                </button>
            </div>
        `;

        // Insert alert at the top of container
        $('.container-fluid').prepend(alertHtml);

        // Auto-dismiss after 5 seconds
        setTimeout(() => {
            $('.alert').fadeOut();
        }, 5000);
    }
</script>

<style>
    .card {
        border-radius: 10px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.1);
        border: none;
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
        border-bottom: 2px solid rgba(0,0,0,0.1);
    }

    .badge {
        font-size: 0.85em;
        padding: 0.4em 0.6em;
    }

    .badge-lg {
        font-size: 1rem;
        padding: 0.5rem 1rem;
    }

    .btn {
        margin-right: 5px;
    }

    .info-section p {
        margin-bottom: 0.5rem;
        line-height: 1.4;
    }

    .notes-container {
        max-height: 200px;
        overflow-y: auto;
    }

    .action-buttons .btn {
        margin-left: 5px;
        margin-right: 5px;
    }

    .status-timeline {
        font-size: 0.9rem;
    }

    .alert {
        border-radius: 8px;
        margin-bottom: 1rem;
    }

    .text-success {
        color: #28a745 !important;
    }

    .text-info {
        color: #17a2b8 !important;
    }

    .font-weight-bold {
        font-weight: 600 !important;
    }
</style>