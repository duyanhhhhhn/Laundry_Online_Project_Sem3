@model List<Laundry_Online_Web_FE.Models.ModelViews.InvoiceView>
@{
    ViewBag.Title = "My Bookings";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h2>My Bookings</h2>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="close" data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="close" data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                </div>
            }

            <!-- THÊM: Thông báo quy tắc chỉnh sửa -->
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <i class="fas fa-info-circle"></i>
                <strong>Booking Rules:</strong>
                <ul class="mb-0 mt-2">
                    <li><strong>New bookings:</strong> Must be scheduled at least <strong>2 hours</strong> in advance</li>
                    <li><strong>Edit bookings:</strong> Can only be modified up to <strong>12 hours</strong> before appointment time</li>
                    <li><strong>Auto-cancellation:</strong> Pending bookings will be automatically cancelled <strong>1 hour</strong> after appointment time if not confirmed</li>
                </ul>
                <button type="button" class="close" data-dismiss="alert">
                    <span>&times;</span>
                </button>
            </div>

            <!-- Booking Statistics -->
            <div class="row mb-4">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header bg-info text-white">
                            <h5><i class="fas fa-chart-bar"></i> Booking Summary</h5>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-3">
                                    <h4 class="text-warning">@Model.Count(b => b.Order_Status == 0)</h4>
                                    <small class="text-muted">Pending</small>
                                </div>
                                <div class="col-md-3">
                                    <h4 class="text-info">@Model.Count(b => b.Order_Status == 1)</h4>
                                    <small class="text-muted">Confirmed</small>
                                </div>
                                <div class="col-md-3">
                                    <h4 class="text-success">@Model.Count(b => b.Order_Status == 2)</h4>
                                    <small class="text-muted">Paid</small>
                                </div>
                                <div class="col-md-3">
                                    <h4 class="text-danger">@Model.Count(b => b.Order_Status == 3)</h4>
                                    <small class="text-muted">Cancelled</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Count > 0)
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Booking ID</th>
                                <th>Appointment Date</th>
                                <th>Appointment Time</th>
                                <th>Status</th>
                                <th>Notes</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var booking in Model)
                            {
                                <tr>
                                    <td>#@booking.Id</td>
                                    <td>@booking.Invoice_Date.ToString("dd/MM/yyyy")</td>
                                    <td>@booking.Invoice_Date.ToString("HH:mm")</td>
                                    <td>
                                        @{
                                            // CẬP NHẬT: Định nghĩa trạng thái mới
                                            string statusText = "";
                                            string statusClass = "";
                                            string statusIcon = "";
                                            switch (booking.Order_Status)
                                            {
                                                case 0:
                                                    statusText = "Pending";
                                                    statusClass = "warning";
                                                    statusIcon = "fa-hourglass-half";
                                                    break;
                                                case 1:
                                                    statusText = "Confirmed";
                                                    statusClass = "info";
                                                    statusIcon = "fa-check-circle";
                                                    break;
                                                case 2:
                                                    statusText = "Paid";
                                                    statusClass = "success";
                                                    statusIcon = "fa-money-bill-wave";
                                                    break;
                                                case 3:
                                                    statusText = "Cancelled";
                                                    statusClass = "danger";
                                                    statusIcon = "fa-times-circle";
                                                    break;
                                                default:
                                                    statusText = "Unknown";
                                                    statusClass = "secondary";
                                                    statusIcon = "fa-question-circle";
                                                    break;
                                            }
                                        }
                                        <span class="badge badge-@statusClass">
                                            <i class="fas @statusIcon"></i>
                                            @statusText
                                        </span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(booking.Notes))
                                        {
                                            <span title="@booking.Notes">
                                                @(booking.Notes.Length > 50 ? booking.Notes.Substring(0, 50) + "..." : booking.Notes)
                                            </span>
                                        }
                                        else
                                        {
                                            <em class="text-muted">No notes</em>
                                        }
                                    </td>
                                    <td>
                                        @if (ViewBag.CanEdit(booking))
                                        {
                                            <a href="@Url.Action("EditBooking", "Home", new { id = booking.Id })"
                                               class="btn btn-sm btn-primary" title="Edit booking (available until 12 hours before appointment)">
                                                <i class="fas fa-edit"></i> Edit
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-muted">
                                                @if (booking.Order_Status == 1)
                                                {
                                                    <i class="fas fa-check-circle text-info"></i> <em>Confirmed</em>
                                                }
                                                else if (booking.Order_Status == 2)
                                                {
                                                    <i class="fas fa-money-bill-wave text-success"></i> <em>Paid</em>
                                                }
                                                else if (booking.Order_Status == 3)
                                                {
                                                    <i class="fas fa-times-circle text-danger"></i> <em>Cancelled</em>
                                                }
                                                else
                                                {
                                                    <i class="fas fa-clock text-muted"></i> <em>Cannot edit (less than 12h remaining)</em>
                                                }
                                            </span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>


            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> You don't have any bookings yet.
                    <a href="@Url.Action("BookService", "Home")" class="btn btn-primary ml-3">
                        <i class="fas fa-calendar-plus"></i> Book a Service
                    </a>
                </div>
            }

            <div class="mt-4">
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                    <i class="fas fa-home"></i> Back to Home
                </a>
                <a href="@Url.Action("BookService", "Home")" class="btn btn-primary" title="New bookings must be at least 2 hours in advance">
                    <i class="fas fa-calendar-plus"></i> Book New Service
                </a>
            </div>
        </div>
    </div>
</div>

<style>
    .table {
        background: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .badge {
        font-size: 0.9em;
        padding: 0.5em 0.8em;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .alert {
        border-radius: 8px;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0,123,255,0.1);
    }

    .card {
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .badge-warning {
        background-color: #ffc107;
        color: #212529;
    }

    .badge-info {
        background-color: #17a2b8;
        color: white;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .alert-info ul {
        padding-left: 1.2rem;
    }

    .alert-info li {
        margin-bottom: 0.25rem;
    }
</style>